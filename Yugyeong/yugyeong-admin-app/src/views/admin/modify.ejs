<div class="card">
    <div class="card-body">
        <h5 class="card-title fw-semibold mb-4">관리자 계정 변경</h5>

            <!-- 관리자 계정 등록 form -->
            <form id="modifyAdmin" action="/admin/modify" method="post">

                <!-- html hidden 태그에 관리자 고유번호를 저장하고 name 속성을 지정해 post로 전달 시 관리자 고유번호를 전달 -->
                <input type="hidden" id="indexId" name="indexId" />

                <div class="row">
                    <!-- 아이디 영역 -->
                    <div class="mb-3 col-sm-6">
                        <label for="adminID" class="form-label">아이디</label>
                        <input type="text" class="form-control" id="adminID" name="adminID" />
                    </div>

                    <!-- 비밀번호 영역 -->
                    <div class="mb-3 col-sm-6">
                        <label for="adminPassword" class="form-label">비밀번호</label>
                        <input type="password" class="form-control" id="adminPassword" name="adminPassword" readonly />
                    </div>
                </div>

                <div class="row">
                    <!-- 이름 영역 -->
                    <div class="mb-3 col-sm-4">
                        <label for="adminName" class="form-label">이름</label>
                        <input type="text" class="form-control" id="adminName" name="adminName" readonly />
                    </div>

                    <!-- 생년월일 영역 -->
                    <div class="mb-3 col-sm-4">
                        <label for="adminBirth" class="form-label">생년월일</label>
                        <input type="text" class="form-control" id="adminBirth" name="adminBirth" readonly />
                    </div>

                    <!-- 성별 영역 -->
                    <div class="mb-3 col-sm-4">
                        <label for="adminGender" class="form-label">성별</label>
                        <select id="adminGender" class="form-control" name="adminGender" readonly >
                            <option value="0">선택</option>
                            <option value="1">남성</option>
                            <option value="2">여성</option>
                        </select>
                    </div>
                </div>

                <div class="row">
                    <!-- 이메일 영역 -->
                    <div class="mb-3 col-sm-6">
                        <label for="adminEmail" class="form-label">이메일</label>
                        <input type="email" class="form-control" id="adminEmail" name="adminEmail"/>
                    </div>

                    <!-- 전화번호 영역 -->
                    <div class="mb-3 col-sm-6">
                        <label for="adminTelephone" class="form-label">전화번호</label>
                        <input type="text" class="form-control" id="adminTelephone" name="adminTelephone" />
                    </div>
                </div>

                <div class="row">
                    <!-- 기업/부서명 영역 -->
                    <div class="mb-3 col-sm-6">
                        <label for="adminCompanyDepartment" class="form-label">기업/부서명</label>
                        <input type="text" class="form-control" id="adminCompanyDepartment" name="adminCompanyDepartment" />
                    </div>

                    <!-- 계정 상태 영역 -->
                    <div class="mb-3 col-sm-6">
                        <label for="adminAccountState" class="form-label">계정 상태</label>
                        <select id="adminAccountState" class="form-control" name="adminAccountState">
                            <option value="0">선택</option>
                            <option value="1">사용 중</option>
                            <option value="2">사용 불가</option>
                        </select>
                    </div>
                </div>

                <!-- 체크박스 영역 -->
                <div class="mb-3 form-check">
                    <input
                    type="checkbox"
                    class="form-check-input"
                    id="exampleCheck1"
                    />
                    <label class="form-check-label" for="exampleCheck1"
                    >Check me out</label
                    >
                </div>

                <!-- 버튼 영역 -->
                <div class="text-center">
                    <button type="submit" class="btn btn-primary">수정</button>
                    <a href="/admin/list" class="btn btn-info">목록</a>
                    <button type="button" id="btnDelete" class="btn btn-danger">삭제</button>
                </div>
        </form>
    </div>
</div>


<script>
    // 서버로부터 기존 admin 계정 정보를 가져오도록 요청하여, form의 value에 채우는 함수
    async function fetchAdminData(index_id) {
        try {
            // 서버에 GET 요청을 보내 JSON 데이터를 받는다.
            const response = await fetch(`/admin/api/modify/${index_id}`);
            const admin = await response.json();

            // form의 value에 데이터를 채운다.
            document.getElementById('indexId').value = admin.index_id;
            document.getElementById('adminID').value = admin.admin_id;
            document.getElementById('adminPassword').value = admin.admin_password;
            document.getElementById('adminName').value = admin.admin_name;
            document.getElementById('adminBirth').value = admin.admin_birth;
            document.getElementById('adminGender').value = admin.admin_gender;
            document.getElementById('adminEmail').value = admin.admin_email;
            document.getElementById('adminTelephone').value = admin.admin_telephone;
            document.getElementById('adminCompanyDepartment').value = admin.company_department;
            document.getElementById('adminAccountState').value = admin.account_state;

        } catch (error) {
            console.error('Error fetching admin data:', error);
        }
    }

    // URL 경로에서 id를 추출한다.
    document.addEventListener('DOMContentLoaded', function() {
        const pathSegments = window.location.pathname.split('/');
        const index_id = pathSegments[pathSegments.length - 1]; // 배열의 마지막 요소를 가져온다.

        fetchAdminData(index_id); // fetchAdminData 함수 호출
    });
    
    // 삭제 버튼 클릭 시 서버로 삭제 요청
    document.getElementById('btnDelete').addEventListener('click', function() {
        if (confirm('정말 삭제하시겠습니까?')) {
            const index_id = document.getElementById('indexId').value;
            
            // 서버에 삭제 요청
            // fetch API는 비동기적으로 요청을 보내기 때문에, 서버에서 리다이렉션을 처리하는 경우 클라이언트 측에서는 리다이렉션을 따르지 않는다.
            fetch(`/admin/delete/${index_id}`, {
                method: 'POST',
            })
            // 서버로부터 fetch 요청에 대한 응답을 받는다.
            // response 값이 true라면, 서버가 리다이렉션을 요청한 것
            .then(response => {
                if (response.redirected) {
                // 클라이언트가 실제로 해당 URL로 리다이렉션을 수행
                    window.location.href = response.url;
                }
            })
            .catch(error => console.error('Error:', error));
        }
    });

</script>
